{
    "type": "multi-process-component",
    "identifier": {
        "namespace": "lifebitai",
        "name": "twas_txt"
    },
    "description": "Pipeline for transcriptome-wide association analysis using PTWAS/GAMBIT software. This version has a .txt input file.",
    "processes": [
        "ptwas_scan"
    ],
    "resources": {
      "cpus": 1,
      "memory": "6.GB",
      "disk" : "60.GB"
    },
    "errors": {
      "errorStrategy": "retry",
      "maxRetries": 9
    },
    "containers": [
        {
            "process": "ptwas_scan",
            "name": "quay.io/lifebitai/ptwas",
            "tag": "1.0.0_089aa00"
        }
    ],
    "inputs": {
        "input1": {
            "label": "ch_ld_reference",
            "elements": [
            {
                "id": "ld_reference",
                "type": "path",
                "pattern": "*.gambit.tgz",
                "checkIfExists": true
            }
            ]
        },
        "input2": {
            "label": "ch_eqtl_weights",
            "elements": [
            {
                "id": "eqtl_weights",
                "type": "path",
                "pattern": "*.txt.gz",
                "checkIfExists": true
            }
            ]
        },
        "input3": {
            "label": "ch_gwas_sumstats",
            "elements": [
            {
                "id": "gwas_sumstats",
                "type": "path",
                "pattern": "*.txt",
                "checkIfExists": true
            }
            ]
        }
    },
    "parameters":
    {
        "parameter1": {
            "id": "outdir",
            "type": "path",
            "description": "Output directory for the results",
            "required": false,
            "default": "results/"
          }, 
          "parameter2": {
            "id": "gambit_exec_path",
            "type": "path",
            "description": "Path to the gambit executables",
            "required": false,
            "default": "/GAMBIT/bin/GAMBIT"
          }
    }
    "outputs": {
        "output1": {
          "label": "stratified_out",
          "elements": [{
            "id": "stratified_out",
            "type": "path",
            "pattern": "*stratified_out.txt"
          }]
        },
        "output2": {
            "label": "summary_out",
            "elements": [{
              "id": "summary_out",
              "type": "path",
              "pattern": "*summary_out.txt"
            }]
          }
    }
}